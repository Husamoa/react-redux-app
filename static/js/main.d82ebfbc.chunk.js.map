{"version":3,"sources":["redux/actionTypes.js","constants.js","redux/reducers/visibilityFilter.js","redux/reducers/todos.js","redux/reducers/index.js","app/store.js","redux/actions.js","components/AddTodo.js","components/Todo.js","redux/selectors.js","components/TodoList.js","components/VisibilityFilters.js","App.js","index.js"],"names":["ADD_TODO","TOGGLE_TODO","SET_FILTER","VISIBILITY_FILTERS","ALL","COMPLETED","INCOMPLETE","initialState","visibilityFilter","state","action","type","payload","filter","allIds","byIds","combineReducers","todos","id","content","completed","createStore","rootReducer","nextTodoId","AddTodo","props","updateInput","input","setState","handleAddTodo","addTodo","TextField","label","variant","onChange","e","target","value","this","Button","className","onClick","React","Component","connect","toggleTodo","todo","cx","getTodosState","store","getTodos","getTodoList","map","getTodoById","allTodos","getTodosByVisibilityFilter","length","index","activeFilter","setFilter","Object","keys","filterKey","currentFilter","App","Container","Grid","alignContent","rootElement","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.d82ebfbc.chunk.js","sourcesContent":["export const ADD_TODO = \"ADD_TODO\";\r\nexport const TOGGLE_TODO = \"TOGGLE_TODO\";\r\nexport const SET_FILTER = \"SET_FILTER\";\r\n","export const VISIBILITY_FILTERS = {\r\n    ALL: \"all\",\r\n    COMPLETED: \"completed\",\r\n    INCOMPLETE: \"incomplete\"\r\n};\r\n","import { SET_FILTER } from \"../actionTypes\";\r\nimport { VISIBILITY_FILTERS } from \"../../constants\";\r\n\r\nconst initialState = VISIBILITY_FILTERS.ALL;\r\n\r\nconst visibilityFilter = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_FILTER: {\r\n            return action.payload.filter;\r\n        }\r\n        default: {\r\n            return state;\r\n        }\r\n    }\r\n};\r\n\r\nexport default visibilityFilter;\r\n","import { ADD_TODO, TOGGLE_TODO } from \"../actionTypes\";\r\n\r\nconst initialState = {\r\n    allIds: [],\r\n    byIds: {}\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n    switch (action.type) {\r\n        case ADD_TODO: {\r\n            const { id, content } = action.payload;\r\n            return {\r\n                ...state,\r\n                allIds: [...state.allIds, id],\r\n                byIds: {\r\n                    ...state.byIds,\r\n                    [id]: {\r\n                        content,\r\n                        completed: false\r\n                    }\r\n                }\r\n            };\r\n        }\r\n        case TOGGLE_TODO: {\r\n            const { id } = action.payload;\r\n            return {\r\n                ...state,\r\n                byIds: {\r\n                    ...state.byIds,\r\n                    [id]: {\r\n                        ...state.byIds[id],\r\n                        completed: !state.byIds[id].completed\r\n                    }\r\n                }\r\n            };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport visibilityFilter from \"./visibilityFilter\";\r\nimport todos from \"./todos\";\r\n\r\nexport default combineReducers({ todos, visibilityFilter });\r\n","import { createStore } from \"redux\";\r\nimport rootReducer from \"../redux/reducers\";\r\n\r\nexport default createStore(rootReducer);\r\n","import { ADD_TODO, TOGGLE_TODO, SET_FILTER } from \"./actionTypes\";\r\n\r\nlet nextTodoId = 0;\r\n\r\nexport const addTodo = content => ({\r\n    type: ADD_TODO,\r\n    payload: {\r\n        id: ++nextTodoId,\r\n        content\r\n    }\r\n});\r\n\r\nexport const toggleTodo = id => ({\r\n    type: TOGGLE_TODO,\r\n    payload: { id }\r\n});\r\n\r\nexport const setFilter = filter => ({ type: SET_FILTER, payload: { filter } });\r\n","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {addTodo} from \"../redux/actions\";\r\nimport {Button, TextField, Container} from '@material-ui/core'\r\n\r\nclass AddTodo extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {input: \"\"};\r\n    }\r\n\r\n    updateInput = input => {\r\n        this.setState({input});\r\n    };\r\n\r\n    handleAddTodo = () => {\r\n        this.props.addTodo(this.state.input);\r\n        this.setState({input: \"\"});\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <TextField id=\"outlined-basic\" label=\"Do zrobienia\" variant=\"outlined\"\r\n                    onChange={e => this.updateInput(e.target.value)}\r\n                    value={this.state.input}\r\n                />\r\n                <Button variant=\"contained\" className=\"add-todo\" onClick={this.handleAddTodo}>\r\n                    Dodaj do listy\r\n                </Button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    null,\r\n    {addTodo}\r\n)(AddTodo);\r\n// export default AddTodo;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport cx from \"classnames\";\r\nimport { toggleTodo } from \"../redux/actions\";\r\n\r\nconst Todo = ({ todo, toggleTodo }) => (\r\n    <li className=\"todo-item\" onClick={() => toggleTodo(todo.id)}>\r\n        {todo && todo.completed ? \"ðŸ‘Œ\" : \"ðŸ‘‹\"}{\" \"}\r\n        <span\r\n            className={cx(\r\n                \"todo-item__text\",\r\n                todo && todo.completed && \"todo-item__text--completed\"\r\n            )}\r\n        >\r\n      {todo.content}\r\n    </span>\r\n    </li>\r\n);\r\n\r\n// export default Todo;\r\nexport default connect(\r\n    null,\r\n    { toggleTodo }\r\n)(Todo);\r\n","import { VISIBILITY_FILTERS } from \"../constants\";\r\n\r\nexport const getTodosState = store => store.todos;\r\n\r\nexport const getTodoList = store =>\r\n    getTodosState(store) ? getTodosState(store).allIds : [];\r\n\r\nexport const getTodoById = (store, id) =>\r\n    getTodosState(store) ? { ...getTodosState(store).byIds[id], id } : {};\r\n\r\n/**\r\n * example of a slightly more complex selector\r\n * select from store combining information from multiple reducers\r\n */\r\nexport const getTodos = store =>\r\n    getTodoList(store).map(id => getTodoById(store, id));\r\n\r\nexport const getTodosByVisibilityFilter = (store, visibilityFilter) => {\r\n    const allTodos = getTodos(store);\r\n    switch (visibilityFilter) {\r\n        case VISIBILITY_FILTERS.COMPLETED:\r\n            return allTodos.filter(todo => todo.completed);\r\n        case VISIBILITY_FILTERS.INCOMPLETE:\r\n            return allTodos.filter(todo => !todo.completed);\r\n        case VISIBILITY_FILTERS.ALL:\r\n        default:\r\n            return allTodos;\r\n    }\r\n};\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Todo from \"./Todo\";\r\n// import { getTodos } from \"../redux/selectors\";\r\nimport { getTodosByVisibilityFilter } from \"../redux/selectors\";\r\nimport { VISIBILITY_FILTERS } from \"../constants\";\r\n\r\nconst TodoList = ({ todos }) => (\r\n    <ul className=\"todo-list\">\r\n        {todos && todos.length\r\n            ? todos.map((todo, index) => {\r\n                return <Todo key={`todo-${todo.id}`} todo={todo} />;\r\n            })\r\n            : \"Nie masz zadaÅ„ do zrobienia!\"}\r\n    </ul>\r\n);\r\n\r\n// const mapStateToProps = state => {\r\n//   const { byIds, allIds } = state.todos || {};\r\n//   const todos =\r\n//     allIds && state.todos.allIds.length\r\n//       ? allIds.map(id => (byIds ? { ...byIds[id], id } : null))\r\n//       : null;\r\n//   return { todos };\r\n// };\r\n\r\nconst mapStateToProps = state => {\r\n    const { visibilityFilter } = state;\r\n    const todos = getTodosByVisibilityFilter(state, visibilityFilter);\r\n    return { todos };\r\n    //   const allTodos = getTodos(state);\r\n    //   return {\r\n    //     todos:\r\n    //       visibilityFilter === VISIBILITY_FILTERS.ALL\r\n    //         ? allTodos\r\n    //         : visibilityFilter === VISIBILITY_FILTERS.COMPLETED\r\n    //           ? allTodos.filter(todo => todo.completed)\r\n    //           : allTodos.filter(todo => !todo.completed)\r\n    //   };\r\n};\r\n// export default TodoList;\r\nexport default connect(mapStateToProps)(TodoList);\r\n","import React from \"react\";\r\nimport cx from \"classnames\";\r\nimport {connect} from \"react-redux\";\r\nimport {setFilter} from \"../redux/actions\";\r\nimport {VISIBILITY_FILTERS} from \"../constants\";\r\n\r\nconst VisibilityFilters = ({activeFilter, setFilter}) => {\r\n    return (\r\n        <div className=\"visibility-filters\">\r\n            {Object.keys(VISIBILITY_FILTERS).map(filterKey => {\r\n                const currentFilter = VISIBILITY_FILTERS[filterKey];\r\n                return (\r\n                    <span\r\n                        key={`visibility-filter-${currentFilter}`}\r\n                        className={cx(\r\n                            \"filter\",\r\n                            currentFilter === activeFilter && \"filter--active\"\r\n                        )}\r\n                        onClick={() => {\r\n                            setFilter(currentFilter);\r\n                        }}\r\n                    >\r\n            {currentFilter}\r\n          </span>\r\n                );\r\n            })}\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {activeFilter: state.visibilityFilter};\r\n};\r\n// export default VisibilityFilters;\r\nexport default connect(\r\n    mapStateToProps,\r\n    {setFilter}\r\n)(VisibilityFilters);\r\n","import React from \"react\";\r\nimport AddTodo from \"./components/AddTodo\";\r\nimport TodoList from \"./components/TodoList\";\r\nimport VisibilityFilters from \"./components/VisibilityFilters\";\r\nimport {Container, Grid} from \"@material-ui/core\";\r\nimport \"./styles/App.scss\";\r\n\r\nexport default function App() {\r\n    return (\r\n        <Container className=\"todo-app\">\r\n            <Grid alignContent=\"center\">\r\n            <h1>Todo List</h1>\r\n            <AddTodo />\r\n            <TodoList />\r\n            <VisibilityFilters />\r\n            </Grid>\r\n        </Container>\r\n    );\r\n}\r\n\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\n\r\nimport store from \"./app/store\";\r\n\r\nimport App from './App';\r\n\r\n\r\nconst rootElement = document.getElementById(\"root\");\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <App />\r\n    </Provider>,\r\n    rootElement\r\n);"],"sourceRoot":""}